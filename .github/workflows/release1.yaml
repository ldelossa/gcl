---
name: Release
# Release looks for tags matching your production tagging schema.
# If encountered a github release will be created and your desired artifacts
# will be pushed.

on:
  push:
    tags:
      - v0.*

jobs:
  release:
    name: Release
    runs-on: 'ubuntu-latest'
    steps:
      - name: Setup
        run: |
          tag=`basename github.ref`
          echo $tag | grep -E "alpha|beta|rc"
          is_prod_releaes = $?
          cat <<.
          ::set-env name=VERSION::${tag}
          ::set-env name=PROD_RELEASE::%{is_prod_release}
          .
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: ChangeLog
        shell: bash
        run: |
          curl -o git-chglog -L https://github.com/git-chglog/git-chglog/releases/download/0.9.1/git-chglog_linux_amd64
          chmod u+x git-chglog
          tag=`basename ${{ github.ref }}`
          echo "creating change log for tag: $tag"
          chglog="$(./git-chglog ${tag})"
          chglog="${chglog//'%'/'%25'}"
          chglog="${chglog//$'\n'/'%0A'}"
          chglog="${chglog//$'\r'/'%0D'}"
          cat <<.
          ::set-env name=CHANGELOG::${chglog}
          .
      - name: ChangeLogSanityCheck
        run: |
          cat <<.
          ${{ env.CHANGELOG }}
          .
      - name: Create Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ env.VERSION}} Release
          body: |
            ${{ env.CHANGELOG }}
          prerelease: ${{ contains(env.VERSION, 'alpha') || contains(env.VERSION, 'beta') || contains(env.VERSION, 'rc') }}
      - name: Artifacts
        run: |
          pushing release artifacts
